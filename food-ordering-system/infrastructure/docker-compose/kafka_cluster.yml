version: '3.8'

services:

  schema-registry:
    image: confluentinc/cp-schema-registry:${CP_SCHEMA_VERSION}
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "PLAINTEXT://kafka-broker-1:9092,PLAINTEXT://kafka-broker-2:9092,PLAINTEXT://kafka-broker-3:9092"
      SCHEMA_REGISTRY_DEBUG: "true"
    networks:
      - ${GLOBAL_NETWORK:-kafka}

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    container_name: kafdrop
    restart: always
    depends_on:
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka-broker-1:9092,kafka-broker-2:9092,kafka-broker-3:9092"
    networks:
      - ${GLOBAL_NETWORK:-kafka}

  kafka-broker-1:
    image: confluentinc/cp-kafka:${CP_KAFKA_VERSION}
    hostname: kafka-broker-1
    container_name: kafka-broker-1
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_KRAFT_MODE: "true"
      KAFKA_LISTENERS: PLAINTEXT://kafka-broker-1:9092,CONTROLLER://kafka-broker-1:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-1:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-broker-1:9093,2@kafka-broker-2:9093,3@kafka-broker-3:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LOG_DIRS: /var/lib/kafka/data
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      CLUSTER_ID: "7wGvYtL2TgafD7HdG5XqRw"  # A unique ID for the Kafka cluster.
    volumes:
      - ./volumes/kafka/broker-1:/var/lib/kafka/data
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - ${GLOBAL_NETWORK:-kafka}

  kafka-broker-2:
    image: confluentinc/cp-kafka:${CP_KAFKA_VERSION}
    hostname: kafka-broker-2
    container_name: kafka-broker-2
    ports:
      - "9094:9092"
    environment:
      KAFKA_NODE_ID: 2
      KAFKA_KRAFT_MODE: "true"
      KAFKA_LISTENERS: PLAINTEXT://kafka-broker-2:9092,CONTROLLER://kafka-broker-2:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-2:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-broker-1:9093,2@kafka-broker-2:9093,3@kafka-broker-3:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LOG_DIRS: /var/lib/kafka/data
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      CLUSTER_ID: "7wGvYtL2TgafD7HdG5XqRw"  # A unique ID for the Kafka cluster.
    volumes:
      - ./volumes/kafka/broker-2:/var/lib/kafka/data
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - ${GLOBAL_NETWORK:-kafka}

  kafka-broker-3:
    image: confluentinc/cp-kafka:${CP_KAFKA_VERSION}
    hostname: kafka-broker-3
    container_name: kafka-broker-3
    ports:
      - "9096:9092"
    environment:
      KAFKA_NODE_ID: 3
      KAFKA_KRAFT_MODE: "true"
      KAFKA_LISTENERS: PLAINTEXT://kafka-broker-3:9092,CONTROLLER://kafka-broker-3:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-3:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-broker-1:9093,2@kafka-broker-2:9093,3@kafka-broker-3:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LOG_DIRS: /var/lib/kafka/data
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      CLUSTER_ID: "7wGvYtL2TgafD7HdG5XqRw"  # A unique ID for the Kafka cluster.
    volumes:
      - ./volumes/kafka/broker-3:/var/lib/kafka/data
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - ${GLOBAL_NETWORK:-kafka}

#  kafka-manager:
#    image: hlebalbau/kafka-manager:stable
#    restart: always
#    ports:
#      - "9090:9090"
#    #environment:
#    networks:
#      - ${GLOBAL_NETWORK:-kafka}